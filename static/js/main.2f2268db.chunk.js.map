{"version":3,"sources":["serviceWorker.js","Components/Board/Square.js","Components/Board/Board.js","Components/Board/Game.js","Components/Pages/Home.js","Components/Pages/Blog.js","Components/Pages/About.js","Components/Navbar/Navbar.js","index.js"],"names":["Boolean","window","location","hostname","match","Square","props","className","onClick","value","Board","i","this","squares","startingIndex","renderSquare","renderRow","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","lines","length","a","b","c","step","setState","slice","squaresTemp","calculateWinner","concat","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","Home","Blog","About","Navbar","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","aria-labelledby","tabIndex","aria-disabled","placeholder","ReactDOM","render","StrictMode","basename","process","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2MAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2CCLSC,MAXf,SAAgBC,GACZ,OACI,4BACIC,UAAU,qCACVC,QAASF,EAAME,SAEdF,EAAMG,QC4BJC,E,2KA/BEC,GAAG,IAAD,OACX,OACI,kBAAC,EAAD,CACIF,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAK,EAAKF,MAAME,QAAQG,Q,gCAKnCG,GACN,OACI,yBAAKP,UAAU,OACVK,KAAKG,aAAaD,GAClBF,KAAKG,aAAaD,EAAc,GAChCF,KAAKG,aAAaD,EAAc,M,+BAOzC,OACI,yBAAKP,UAAU,SACVK,KAAKI,UAAU,GACfJ,KAAKI,UAAU,GACfJ,KAAKI,UAAU,Q,GA3BZC,IAAMC,WC0FXC,E,kDAzFX,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IACDc,MAAQ,CACTC,QAAS,CAAC,CACNR,QAAQS,MAAM,GAAGC,KAAK,QAE1BC,WAAY,EACZC,SAAS,GAPE,E,4DAWHZ,GAWZ,IAVA,IAAMa,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAf,EAAI,EAAGA,EAAIe,EAAMC,OAAQhB,IAAK,CAAC,IAAD,cACnBe,EAAMf,GADa,GAC9BiB,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIjB,EAAQe,IAAMf,EAAQe,KAAOf,EAAQgB,IAAMhB,EAAQe,KAAOf,EAAQiB,GACpE,OAAOjB,EAAQe,GAGnB,OAAO,O,6BAGJG,GACHnB,KAAKoB,SAAS,CACVR,WAAYO,EACZN,QAAUM,EAAO,IAAO,M,kCAIpBpB,GACR,IAAMU,EAAUT,KAAKQ,MAAMC,QAAQY,MAAM,EAAGrB,KAAKQ,MAAMI,WAAa,GAE9DU,EADUb,EAAQA,EAAQM,OAAS,GACbd,QAAQoB,QAChCrB,KAAKuB,gBAAgBD,IAAgBA,EAAYvB,KAGrDuB,EAAYvB,GAAKC,KAAKQ,MAAMK,QAAU,IAAM,IAC5Cb,KAAKoB,SAAS,CACVX,QAASA,EAAQe,OAAO,CAAC,CACrBvB,QAAUqB,KAEdV,WAAYH,EAAQM,OACpBF,SAAUb,KAAKQ,MAAMK,a,+BAInB,IAaFY,EAbC,OACChB,EAAUT,KAAKQ,MAAMC,QACrBiB,EAAUjB,EAAQT,KAAKQ,MAAMI,YAC7Be,EAAS3B,KAAKuB,gBAAgBG,EAAQzB,SAEtC2B,EAAQnB,EAAQoB,KAAI,SAACV,EAAMW,GAC7B,IAAMC,EAAOD,EAAO,eAAiBA,EAAO,mBAC5C,OACI,wBAAIE,IAAKF,GACL,4BAAQnC,UAAU,yBAAyBC,QAAS,kBAAM,EAAKqC,OAAOH,KAAQC,OAU1F,OAJIN,EADDE,EACU,UAAYA,EAEZ,iBAAmB3B,KAAKQ,MAAMK,QAAU,IAAM,KAGvD,yBAAKlB,UAAU,QACX,yBAAKA,UAAU,UAAU8B,GACzB,kBAAC,EAAD,CACIxB,QAAWyB,EAAQzB,QACnBL,QAAW,SAACG,GAAD,OAAO,EAAKmC,YAAYnC,MAEvC,4BACK6B,Q,GAnFFvB,IAAMC,WCaV6B,MAdf,SAAczC,GACV,OACI,6BACI,oCACA,kkBCUG0C,MAdf,SAAc1C,GACV,OACI,6BACI,oCACA,kkBCUG2C,MAdf,SAAe3C,GACX,OACI,6BACI,qCACA,kkBCuCG4C,MA1Cf,SAAgB5C,GACZ,OACI,6BACI,yBAAKC,UAAU,iDACX,yBAAKA,UAAU,mBACX,kBAAC,IAAD,CAAMA,UAAU,eAAe4C,GAAG,KAAlC,UACA,4BAAQ5C,UAAU,iBAAiB6C,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBACtL,0BAAMlD,UAAU,yBAEhB,yBAAKA,UAAU,2BAA2BmD,GAAG,0BAC7C,wBAAInD,UAAU,mCACV,wBAAIA,UAAU,YACd,kBAAC,IAAD,CAAMA,UAAU,kBAAkBoD,eAAa,OAAOR,GAAG,SAAzD,SAEA,wBAAI5C,UAAU,YACd,kBAAC,IAAD,CAAMA,UAAU,WAAW4C,GAAG,KAA9B,SAEA,wBAAI5C,UAAU,qBACd,kBAAC,IAAD,CAAMA,UAAU,2BAA2B4C,GAAG,IAAIO,GAAG,iBAAiBE,KAAK,SAASP,cAAY,WAAWG,gBAAc,SAAzH,YAGA,wBAAIjD,UAAU,gBAAgBsD,kBAAgB,kBAC1C,4BAAI,kBAAC,IAAD,CAAMtD,UAAU,gBAAgB4C,GAAG,KAAnC,WACJ,4BAAI,kBAAC,IAAD,CAAM5C,UAAU,gBAAgB4C,GAAG,KAAnC,mBACJ,4BAAI,kBAAC,IAAD,CAAM5C,UAAU,gBAAgB4C,GAAG,KAAnC,0BAGR,wBAAI5C,UAAU,YACd,kBAAC,IAAD,CAAMA,UAAU,oBAAoB4C,GAAG,IAAIW,SAAS,KAAKC,gBAAc,QAAvE,cAGJ,0BAAMxD,UAAU,UACZ,2BAAOA,UAAU,oBAAoB6C,KAAK,SAASY,YAAY,SAASP,aAAW,WACnF,4BAAQlD,UAAU,0BAA0B6C,KAAK,UAAjD,gB,MCxBxBa,IAASC,OACP,kBAAC,IAAMC,WAAP,KAEE,kBAAC,IAAD,CAAeC,SAAUC,oBACvB,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWpD,IAC/B,kBAAC,IAAD,CAAOmD,KAAK,QAAQC,UAAWxB,IAC/B,kBAAC,IAAD,CAAOuB,KAAK,QAAQC,UAAWvB,IAC/B,kBAAC,IAAD,CAAOsB,KAAK,SAASC,UAAWtB,MAGpCuB,SAASC,eAAe,SR4GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2f2268db.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nfunction Square(props){\r\n    return(\r\n        <button \r\n            className=\"square btn btn-primary col p-4 m-1\"\r\n            onClick={props.onClick}\r\n        >\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\n\r\nclass Board extends React.Component{\r\n\r\n    renderSquare(i){\r\n        return (\r\n            <Square \r\n                value={this.props.squares[i]}\r\n                onClick={()=> this.props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderRow(startingIndex){\r\n        return (\r\n            <div className=\"row\">\r\n                {this.renderSquare(startingIndex)}\r\n                {this.renderSquare(startingIndex+1)}\r\n                {this.renderSquare(startingIndex+2)}\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"board\">\r\n                {this.renderRow(0)}\r\n                {this.renderRow(3)}\r\n                {this.renderRow(6)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport Board from './Board'; \r\n\r\nclass Game extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            history: [{\r\n                squares:Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n         }; \r\n    }\r\n    \r\n    calculateWinner(squares) {\r\n        const lines = [\r\n          [0, 1, 2],\r\n          [3, 4, 5],\r\n          [6, 7, 8],\r\n          [0, 3, 6],\r\n          [1, 4, 7],\r\n          [2, 5, 8],\r\n          [0, 4, 8],\r\n          [2, 4, 6],\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n          const [a, b, c] = lines[i];\r\n          if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n          }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    jumpTo(step){\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        });\r\n    }\r\n    \r\n    handleClick(i){\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);    \r\n        const current = history[history.length - 1];\r\n        const squaresTemp = current.squares.slice();\r\n        if (this.calculateWinner(squaresTemp) || squaresTemp[i]) {\r\n            return;\r\n        } \r\n        squaresTemp[i] = this.state.xIsNext ? 'X' : 'O'\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares : squaresTemp,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    render() { \r\n        const history = this.state.history;    \r\n        const current = history[this.state.stepNumber];\r\n        const winner = this.calculateWinner(current.squares);\r\n        \r\n        const moves = history.map((step, move) => {\r\n            const desc = move ? 'Go to move #' + move : 'Go to game start';\r\n            return (        \r\n                <li key={move}>\r\n                    <button className=\"btn btn-secondary mt-1\" onClick={() => this.jumpTo(move)}>{desc}</button>        \r\n                </li>      \r\n            );\r\n        });\r\n        let status;\r\n        if(winner){\r\n            status = 'Winner ' + winner;\r\n        }else{\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"status\">{status}</div>\r\n                <Board \r\n                    squares = {current.squares}\r\n                    onClick = {(i) => this.handleClick(i)}\r\n                />\r\n                <ol>\r\n                    {moves}\r\n                </ol>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default Game;","import React from 'react';\r\n\r\nfunction Home(props){\r\n    return(\r\n        <div>\r\n            <h1>Home</h1>\r\n            <p>\r\n                Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.\r\n                Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.\r\n                Etiam porta sem malesuada magna mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.     \r\n            </p>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nfunction Blog(props){\r\n    return(\r\n        <div>\r\n            <h1>Blog</h1>\r\n            <p>\r\n                Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.\r\n                Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.\r\n                Etiam porta sem malesuada magna mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.     \r\n            </p>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Blog;","import React from 'react';\r\n\r\nfunction About(props){\r\n    return(\r\n        <div>\r\n            <h1>About</h1>\r\n            <p>\r\n                Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.\r\n                Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.\r\n                Etiam porta sem malesuada magna mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.     \r\n            </p>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar(props){\r\n    return(\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">Navbar</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/home\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"#\">Link</Link>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                        <Link className=\"nav-link dropdown-toggle\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                            Dropdown\r\n                        </Link>\r\n                        <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                            <li><Link className=\"dropdown-item\" to=\"#\">Action</Link></li>\r\n                            <li><Link className=\"dropdown-item\" to=\"#\">Another action</Link></li>\r\n                            <li><Link className=\"dropdown-item\" to=\"#\">Something else here</Link></li>\r\n                        </ul>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <Link className=\"nav-link disabled\" to=\"#\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <form className=\"d-flex\">\r\n                        <input className=\"form-control mr-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\n//import App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Game from './Components/Board/Game';\r\nimport Home from './Components/Pages/Home';\r\nimport Blog from './Components/Pages/Blog';\r\nimport About from './Components/Pages/About';\r\nimport Navbar from './Components/Navbar/Navbar';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    \r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Navbar></Navbar>\r\n      <Route path=\"/game\" component={Game}></Route>\r\n      <Route path=\"/home\" component={Home}></Route>\r\n      <Route path=\"/blog\" component={Blog}></Route>\r\n      <Route path=\"/about\" component={About}></Route>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}